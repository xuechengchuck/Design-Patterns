#include <iostream>
using namespace std;
// 适合性能需要比较高的时候，减少了加锁和解锁
class Singleton {
    public:
        static Singleton * GetInstance() {
            return const_cast<Singleton*>(m_Instance);
        }
        static void DestroyInstance() {
            if(m_Instance != nullptr) {
                delete m_Instance;
                m_Instance = nullptr;
            }
        }

        int GetTest() {
            return m_Test;
        }
    private:
        Singleton() { m_Test = 0; }
        static const Singleton * m_Instance;
        int m_Test;
};

const Singleton * Singleton::m_Instance = new Singleton();

int main(int argc, char * argv[])
{
    Singleton * singletonObj = Singleton::GetInstance();
    cout<<singletonObj->GetTest()<<endl;
    singletonObj->DestroyInstance();

    return 0;
}